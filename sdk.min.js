"use strict";const VSN="2.0.0",SOCKET_STATES={connecting:0,open:1,closing:2,closed:3},DEFAULT_TIMEOUT=1e4,WS_CLOSE_NORMAL=1e3,CHANNEL_STATES={closed:"closed",errored:"errored",joined:"joined",joining:"joining",leaving:"leaving"},CHANNEL_EVENTS={close:"phx_close",error:"phx_error",join:"phx_join",reply:"phx_reply",leave:"phx_leave"},CHANNEL_LIFECYCLE_EVENTS=[CHANNEL_EVENTS.close,CHANNEL_EVENTS.error,CHANNEL_EVENTS.join,CHANNEL_EVENTS.reply,CHANNEL_EVENTS.leave],TRANSPORTS={longpoll:"longpoll",websocket:"websocket"};class Push{constructor(e,t,s,n){this.channel=e,this.event=t,this.payload=s||{},this.receivedResp=null,this.timeout=n,this.timeoutTimer=null,this.recHooks=[],this.sent=!1}resend(e){this.timeout=e,this.reset(),this.send()}send(){this.hasReceived("timeout")||(this.startTimeout(),this.sent=!0,this.channel.socket.push({topic:this.channel.topic,event:this.event,payload:this.payload,ref:this.ref,join_ref:this.channel.joinRef()}))}receive(e,t){return this.hasReceived(e)&&t(this.receivedResp.response),this.recHooks.push({status:e,callback:t}),this}reset(){this.cancelRefEvent(),this.ref=null,this.refEvent=null,this.receivedResp=null,this.sent=!1}matchReceive({status:e,response:t,ref:s}){this.recHooks.filter(t=>t.status===e).forEach(e=>e.callback(t))}cancelRefEvent(){this.refEvent&&this.channel.off(this.refEvent)}cancelTimeout(){clearTimeout(this.timeoutTimer),this.timeoutTimer=null}startTimeout(){this.timeoutTimer&&this.cancelTimeout(),this.ref=this.channel.socket.makeRef(),this.refEvent=this.channel.replyEventName(this.ref),this.channel.on(this.refEvent,e=>{this.cancelRefEvent(),this.cancelTimeout(),this.receivedResp=e,this.matchReceive(e)}),this.timeoutTimer=setTimeout(()=>{this.trigger("timeout",{})},this.timeout)}hasReceived(e){return this.receivedResp&&this.receivedResp.status===e}trigger(e,t){this.channel.trigger(this.refEvent,{status:e,response:t})}}class Channel{constructor(e,t,s){this.state=CHANNEL_STATES.closed,this.topic=e,this.params=t||{},this.socket=s,this.bindings=[],this.timeout=this.socket.timeout,this.joinedOnce=!1,this.joinPush=new Push(this,CHANNEL_EVENTS.join,this.params,this.timeout),this.pushBuffer=[],this.rejoinTimer=new Timer(()=>this.rejoinUntilConnected(),this.socket.reconnectAfterMs),this.joinPush.receive("ok",()=>{this.state=CHANNEL_STATES.joined,this.rejoinTimer.reset(),this.pushBuffer.forEach(e=>e.send()),this.pushBuffer=[]}),this.onClose(()=>{this.rejoinTimer.reset(),this.socket.log("channel",`close ${this.topic} ${this.joinRef()}`),this.state=CHANNEL_STATES.closed,this.socket.remove(this)}),this.onError(e=>{this.isLeaving()||this.isClosed()||(this.socket.log("channel",`error ${this.topic}`,e),this.state=CHANNEL_STATES.errored,this.rejoinTimer.scheduleTimeout())}),this.joinPush.receive("timeout",()=>{if(!this.isJoining())return;this.socket.log("channel",`timeout ${this.topic} (${this.joinRef()})`,this.joinPush.timeout),new Push(this,CHANNEL_EVENTS.leave,{},this.timeout).send(),this.state=CHANNEL_STATES.errored,this.joinPush.reset(),this.rejoinTimer.scheduleTimeout()}),this.on(CHANNEL_EVENTS.reply,(e,t)=>{this.trigger(this.replyEventName(t),e)})}rejoinUntilConnected(){this.rejoinTimer.scheduleTimeout(),this.socket.isConnected()&&this.rejoin()}join(e=this.timeout){if(this.joinedOnce)throw"tried to join multiple times. 'join' can only be called a single time per channel instance";return this.joinedOnce=!0,this.rejoin(e),this.joinPush}onClose(e){this.on(CHANNEL_EVENTS.close,e)}onError(e){this.on(CHANNEL_EVENTS.error,t=>e(t))}on(e,t){this.bindings.push({event:e,callback:t})}off(e){this.bindings=this.bindings.filter(t=>t.event!==e)}canPush(){return this.socket.isConnected()&&this.isJoined()}push(e,t,s=this.timeout){if(!this.joinedOnce)throw`tried to push '${e}' to '${this.topic}' before joining. Use channel.join() before pushing events`;let n=new Push(this,e,t,s);return this.canPush()?n.send():(n.startTimeout(),this.pushBuffer.push(n)),n}leave(e=this.timeout){this.state=CHANNEL_STATES.leaving;let t=()=>{this.socket.log("channel",`leave ${this.topic}`),this.trigger(CHANNEL_EVENTS.close,"leave")},s=new Push(this,CHANNEL_EVENTS.leave,{},e);return s.receive("ok",()=>t()).receive("timeout",()=>t()),s.send(),this.canPush()||s.trigger("ok",{}),s}onMessage(e,t,s){return t}isMember(e,t,s,n){if(this.topic!==e)return!1;let i=CHANNEL_LIFECYCLE_EVENTS.indexOf(t)>=0;return!n||!i||n===this.joinRef()||(this.socket.log("channel","dropping outdated message",{topic:e,event:t,payload:s,joinRef:n}),!1)}joinRef(){return this.joinPush.ref}sendJoin(e){this.state=CHANNEL_STATES.joining,this.joinPush.resend(e)}rejoin(e=this.timeout){this.isLeaving()||this.sendJoin(e)}trigger(e,t,s,n){let i=this.onMessage(e,t,s,n);if(t&&!i)throw"channel onMessage callbacks must return the payload, modified or unmodified";this.bindings.filter(t=>t.event===e).map(e=>e.callback(i,s,n||this.joinRef()))}replyEventName(e){return`chan_reply_${e}`}isClosed(){return this.state===CHANNEL_STATES.closed}isErrored(){return this.state===CHANNEL_STATES.errored}isJoined(){return this.state===CHANNEL_STATES.joined}isJoining(){return this.state===CHANNEL_STATES.joining}isLeaving(){return this.state===CHANNEL_STATES.leaving}}let Serializer={encode(e,t){let s=[e.join_ref,e.ref,e.topic,e.event,e.payload];return t(JSON.stringify(s))},decode(e,t){let[s,n,i,o,r]=JSON.parse(e);return t({join_ref:s,ref:n,topic:i,event:o,payload:r})}};class Socket{constructor(e,t={}){this.stateChangeCallbacks={open:[],close:[],error:[],message:[]},this.channels=[],this.sendBuffer=[],this.ref=0,this.timeout=t.timeout||DEFAULT_TIMEOUT,this.transport=t.transport||window.WebSocket||LongPoll,this.defaultEncoder=Serializer.encode,this.defaultDecoder=Serializer.decode,this.transport!==LongPoll?(this.encode=t.encode||this.defaultEncoder,this.decode=t.decode||this.defaultDecoder):(this.encode=this.defaultEncoder,this.decode=this.defaultDecoder),this.heartbeatIntervalMs=t.heartbeatIntervalMs||3e4,this.reconnectAfterMs=t.reconnectAfterMs||function(e){return[1e3,2e3,5e3,1e4][e-1]||1e4},this.logger=t.logger||function(){},this.longpollerTimeout=t.longpollerTimeout||2e4,this.params=t.params||{},this.endPoint=`${e}/${TRANSPORTS.websocket}`,this.heartbeatTimer=null,this.pendingHeartbeatRef=null,this.reconnectTimer=new Timer(()=>{this.disconnect(()=>this.connect())},this.reconnectAfterMs)}protocol(){return location.protocol.match(/^https/)?"wss":"ws"}endPointURL(){let e=Ajax.appendParams(Ajax.appendParams(this.endPoint,this.params),{vsn:VSN});return"/"!==e.charAt(0)?e:"/"===e.charAt(1)?`${this.protocol()}:${e}`:`${this.protocol()}://${location.host}${e}`}disconnect(e,t,s){this.conn&&(this.conn.onclose=function(){},t?this.conn.close(t,s||""):this.conn.close(),this.conn=null),e&&e()}connect(e){e&&(console&&console.log("passing params to connect is deprecated. Instead pass :params to the Socket constructor"),this.params=e),this.conn||(this.conn=new this.transport(this.endPointURL()),this.conn.timeout=this.longpollerTimeout,this.conn.onopen=(()=>this.onConnOpen()),this.conn.onerror=(e=>this.onConnError(e)),this.conn.onmessage=(e=>this.onConnMessage(e)),this.conn.onclose=(e=>this.onConnClose(e)))}log(e,t,s){this.logger(e,t,s)}onOpen(e){this.stateChangeCallbacks.open.push(e)}onClose(e){this.stateChangeCallbacks.close.push(e)}onError(e){this.stateChangeCallbacks.error.push(e)}onMessage(e){this.stateChangeCallbacks.message.push(e)}onConnOpen(){this.log("transport",`connected to ${this.endPointURL()}`),this.flushSendBuffer(),this.reconnectTimer.reset(),this.conn.skipHeartbeat||(clearInterval(this.heartbeatTimer),this.heartbeatTimer=setInterval(()=>this.sendHeartbeat(),this.heartbeatIntervalMs)),this.stateChangeCallbacks.open.forEach(e=>e())}onConnClose(e){this.log("transport","close",e),this.triggerChanError(),clearInterval(this.heartbeatTimer),this.reconnectTimer.scheduleTimeout(),this.stateChangeCallbacks.close.forEach(t=>t(e))}onConnError(e){this.log("transport",e),this.triggerChanError(),this.stateChangeCallbacks.error.forEach(t=>t(e))}triggerChanError(){this.channels.forEach(e=>e.trigger(CHANNEL_EVENTS.error))}connectionState(){switch(this.conn&&this.conn.readyState){case SOCKET_STATES.connecting:return"connecting";case SOCKET_STATES.open:return"open";case SOCKET_STATES.closing:return"closing";default:return"closed"}}isConnected(){return"open"===this.connectionState()}remove(e){this.channels=this.channels.filter(t=>t.joinRef()!==e.joinRef())}channel(e,t={}){let s=new Channel(e,t,this);return this.channels.push(s),s}push(e){let{topic:t,event:s,payload:n,ref:i,join_ref:o}=e,r=()=>{this.encode(e,e=>{this.conn.send(e)})};this.log("push",`${t} ${s} (${o}, ${i})`,n),this.isConnected()?r():this.sendBuffer.push(r)}makeRef(){let e=this.ref+1;return e===this.ref?this.ref=0:this.ref=e,this.ref.toString()}sendHeartbeat(){if(this.isConnected()){if(this.pendingHeartbeatRef)return this.pendingHeartbeatRef=null,this.log("transport","heartbeat timeout. Attempting to re-establish connection"),void this.conn.close(WS_CLOSE_NORMAL,"hearbeat timeout");this.pendingHeartbeatRef=this.makeRef(),this.push({topic:"phoenix",event:"heartbeat",payload:{},ref:this.pendingHeartbeatRef})}}flushSendBuffer(){this.isConnected()&&this.sendBuffer.length>0&&(this.sendBuffer.forEach(e=>e()),this.sendBuffer=[])}onConnMessage(e){this.decode(e.data,e=>{let{topic:t,event:s,payload:n,ref:i,join_ref:o}=e;i&&i===this.pendingHeartbeatRef&&(this.pendingHeartbeatRef=null),this.log("receive",`${n.status||""} ${t} ${s} ${i&&"("+i+")"||""}`,n),this.channels.filter(e=>e.isMember(t,s,n,o)).forEach(e=>e.trigger(s,n,i,o)),this.stateChangeCallbacks.message.forEach(t=>t(e))})}}class LongPoll{constructor(e){this.endPoint=null,this.token=null,this.skipHeartbeat=!0,this.onopen=function(){},this.onerror=function(){},this.onmessage=function(){},this.onclose=function(){},this.pollEndpoint=this.normalizeEndpoint(e),this.readyState=SOCKET_STATES.connecting,this.poll()}normalizeEndpoint(e){return e.replace("ws://","http://").replace("wss://","https://").replace(new RegExp("(.*)/"+TRANSPORTS.websocket),"$1/"+TRANSPORTS.longpoll)}endpointURL(){return Ajax.appendParams(this.pollEndpoint,{token:this.token})}closeAndRetry(){this.close(),this.readyState=SOCKET_STATES.connecting}ontimeout(){this.onerror("timeout"),this.closeAndRetry()}poll(){this.readyState!==SOCKET_STATES.open&&this.readyState!==SOCKET_STATES.connecting||Ajax.request("GET",this.endpointURL(),"application/json",null,this.timeout,this.ontimeout.bind(this),e=>{if(e){var{status:t,token:s,messages:n}=e;this.token=s}else var t=0;switch(t){case 200:n.forEach(e=>this.onmessage({data:e})),this.poll();break;case 204:this.poll();break;case 410:this.readyState=SOCKET_STATES.open,this.onopen(),this.poll();break;case 0:case 500:this.onerror(),this.closeAndRetry();break;default:throw`unhandled poll status ${t}`}})}send(e){Ajax.request("POST",this.endpointURL(),"application/json",e,this.timeout,this.onerror.bind(this,"timeout"),e=>{e&&200===e.status||(this.onerror(e&&e.status),this.closeAndRetry())})}close(e,t){this.readyState=SOCKET_STATES.closed,this.onclose()}}class Ajax{static request(e,t,s,n,i,o,r){if(window.XDomainRequest){let s=new XDomainRequest;this.xdomainRequest(s,e,t,n,i,o,r)}else{let a=window.XMLHttpRequest?new window.XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");this.xhrRequest(a,e,t,s,n,i,o,r)}}static xdomainRequest(e,t,s,n,i,o,r){e.timeout=i,e.open(t,s),e.onload=(()=>{let t=this.parseJSON(e.responseText);r&&r(t)}),o&&(e.ontimeout=o),e.onprogress=(()=>{}),e.send(n)}static xhrRequest(e,t,s,n,i,o,r,a){e.open(t,s,!0),e.timeout=o,e.setRequestHeader("Content-Type",n),e.onerror=(()=>{a&&a(null)}),e.onreadystatechange=(()=>{if(e.readyState===this.states.complete&&a){let t=this.parseJSON(e.responseText);a(t)}}),r&&(e.ontimeout=r),e.send(i)}static parseJSON(e){if(!e||""===e)return null;try{return JSON.parse(e)}catch(t){return console&&console.log("failed to parse JSON response",e),null}}static serialize(e,t){let s=[];for(var n in e){if(!e.hasOwnProperty(n))continue;let i=t?`${t}[${n}]`:n,o=e[n];"object"==typeof o?s.push(this.serialize(o,i)):s.push(encodeURIComponent(i)+"="+encodeURIComponent(o))}return s.join("&")}static appendParams(e,t){if(0===Object.keys(t).length)return e;let s=e.match(/\?/)?"&":"?";return`${e}${s}${this.serialize(t)}`}}Ajax.states={complete:4};var Presence={syncState(e,t,s,n){let i=this.clone(e),o={},r={};return this.map(i,(e,s)=>{t[e]||(r[e]=s)}),this.map(t,(e,t)=>{let s=i[e];if(s){let n=t.metas.map(e=>e.phx_ref),i=s.metas.map(e=>e.phx_ref),a=t.metas.filter(e=>i.indexOf(e.phx_ref)<0),h=s.metas.filter(e=>n.indexOf(e.phx_ref)<0);a.length>0&&(o[e]=t,o[e].metas=a),h.length>0&&(r[e]=this.clone(s),r[e].metas=h)}else o[e]=t}),this.syncDiff(i,{joins:o,leaves:r},s,n)},syncDiff(e,{joins:t,leaves:s},n,i){let o=this.clone(e);return n||(n=function(){}),i||(i=function(){}),this.map(t,(e,t)=>{let s=o[e];o[e]=t,s&&o[e].metas.unshift(...s.metas),n(e,s,t)}),this.map(s,(e,t)=>{let s=o[e];if(!s)return;let n=t.metas.map(e=>e.phx_ref);s.metas=s.metas.filter(e=>n.indexOf(e.phx_ref)<0),i(e,s,t),0===s.metas.length&&delete o[e]}),o},list(e,t){return t||(t=function(e,t){return t}),this.map(e,(e,s)=>t(e,s))},map:(e,t)=>Object.getOwnPropertyNames(e).map(s=>t(s,e[s])),clone:e=>JSON.parse(JSON.stringify(e))};class Timer{constructor(e,t){this.callback=e,this.timerCalc=t,this.timer=null,this.tries=0}reset(){this.tries=0,clearTimeout(this.timer)}scheduleTimeout(){clearTimeout(this.timer),this.timer=setTimeout(()=>{this.tries=this.tries+1,this.callback()},this.timerCalc(this.tries+1))}}var OmnizeAgentSDK=function(e){this.token=e,this.websocket,this.events={},this.channel,this.accountId,this.agentId,this.pendingRequests=[],this.apiUrl="https://services.omnize.com.br",this.msUrl="https://microservices.omnize.com.br"};function parseJwt(e){var t=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),s=decodeURIComponent(atob(t).split("").map(function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(s)}function makeRequest(e="GET",t,s,n,i=null){var o=new XMLHttpRequest;o.onload=function(e){n(JSON.parse(o.response))},o.open(e,t,!0),o.setRequestHeader("Content-type","application/json"),o.setRequestHeader("Authorization",s),o.send(JSON.stringify(i))}OmnizeAgentSDK.prototype={connect:function(){var e=parseJwt(this.token);this.accountId=e.account.id,this.agentId=e.id,this.websocket=new Socket("wss://agentcore.omnize.com.br/socket",{params:{user_id:`agents:${this.accountId}:${this.agentId}`}}),this.websocket.connect();var t=this;this.channel=this.websocket.channel(`uai:${this.accountId}`,{agentId:t.agentId}),this.channel.join().receive("ok",e=>{t.channel.push("get_customers",{accountId:t.accountId})}).receive("error",e=>{console.log("Unable to join",e)}),this.createHandlers()},createHandlers:function(){var e=this;this.channel.on("canceled",t=>{e.events.canceled(t)}),this.channel.on("transferring",t=>{e.events.transferring(t)}),this.channel.on("phx_reply",(t,s)=>{const n=this.pendingRequests.find(e=>e.ref===s);if(n)switch(n.type){case"acceptInteraction":e.events.acceptedInteraction&&e.events.acceptedInteraction(n.interactionHash,t.status,t.reason)}else switch(t.status){case"ok":switch(t.response.type){case"registered":e.events.registered&&e.events.registered();break;case"unregistered":e.events.unregistered&&e.events.unregistered();break;case"transferred":e.events.transferred&&e.events.transferred(t.response.interactionHash);break;case"mailDelivered":e.events.mailDelivered&&e.events.mailDelivered(t);break;case"receivedMessage":e.events.receivedMessage&&e.events.receivedMessage(t.response)}break;case"error":switch(t.response.reason){case"unauthorized":e.events.unauthorized&&e.events.unauthorized();break;case"transferFailed":e.events.transferFailed&&e.events.transferFailed(t.response.interactionHash);break;case"mailFailed":e.events.mailFailed&&e.events.mailFailed(t.response)}}}),this.channel.on("agent_message",t=>{if(!t.agentId||t.agentId===e.agentId)switch(t.type){case"newMessage":e.events.newMessage&&e.events.newMessage(t);break;case"receivedMessage":e.events.receivedMessage&&e.events.receivedMessage(t);break;case"deliveredMessage":e.events.deliveredMessage&&e.events.deliveredMessage(t);break;case"typing":e.events.typing&&e.events.typing(t.interactionHash);break;case"cleared":e.events.cleared&&e.events.cleared(t.interactionHash);break;case"newInteraction":e.events.newInteraction&&e.events.newInteraction(t);break;case"canceled":e.events.canceled&&e.events.canceled(t.interactionHash);break;case"finishedInteraction":e.events.finishedInteraction&&e.events.finishedInteraction(t.interactionHash);break;case"updateInteraction":e.events.updateInteraction&&e.events.updateInteraction(t);break;case"kill":e.events.kill&&e.events.kill()}})},on:function(e,t){"function"==typeof t&&(this.events[e]=t)},register:function(){this.channel.push("register")},unregister:function(){this.channel.push("unregister")},newMessage:function(e,t,s="TEXT"){var n={tempId:(new Date).getTime(),interactionHash:t,content:e,contentType:s};return this.channel.push("newMessage",n),n.tempId},sendMailMessage:function(e){this.channel.push("newMailMessage",e)},typing:function(e){this.channel.push("typing",{interactionHash:e})},cleared:function(e){this.channel.push("cleared",{interactionHash:e})},acceptInteraction:function(e){this.pendingRequests.push({type:"acceptInteraction",ref:this.channel.push("acceptInteraction",{interactionHash:e}).ref,interactionHash:e})},finishInteraction:function(e){this.channel.push("finishInteraction",{interactionHash:e})},transferToDepartment:function(e,t){var s={interactionHash:t,toDepartmentId:e};this.channel.push("transferToDepartment",s)},transferToAgent:function(e,t,s){var n={interactionHash:s,toAgentId:e,toDepartmentId:t};this.channel.push("transferToAgent",n)},getTransferList:function(e){makeRequest("GET",`${this.apiUrl}/accounts/${this.accountId}/transference`,this.token,e)},getTags:function(e){makeRequest("GET",`${this.apiUrl}/tags?accountId=${this.accountId}`,this.token,e)},updateTags:function(e,t,s){var n={agentId:this.agentId,tagIds:t};makeRequest("PUT",`${this.apiUrl}/interactions/${e}/?accountId=${this.accountId}`,this.token,s,n)},updateNote:function(e,t,s){var n={agentId:this.agentId,note:t};makeRequest("PUT",`${this.apiUrl}/interactions/${e}/?accountId=${this.accountId}`,this.token,s,n)},getShortcuts:function(e="",t){makeRequest("GET",`${this.apiUrl}/shortcuts/search/${e}?accountId=${this.accountId}`,this.token,t)},getInteractionInfo:function(e,t){makeRequest("GET",`${this.apiUrl}/interactions/${e}/info?accountId=${this.accountId}&origin=uai`,this.token,t)},getHistoryInteractionInfo:function(e,t){makeRequest("GET",`${this.apiUrl}/interactions/${e}/info?accountId=${this.accountId}&origin=uaiHistory`,this.token,t)},getCustomers:function(e=20,t=1,s="",n){makeRequest("GET",`${this.apiUrl}/customers/?accountId=${this.accountId}&limit=${e}&page=${t}&search=${s}`,this.token,n)},getCustomerHistory:function(e,t=20,s=1,n="",i){makeRequest("GET",`${this.apiUrl}/customers/${e}/interactions?accountId=${this.accountId}&limit=${t}&page=${s}&search=${n}`,this.token,i)},updateCustomer:function(e,t,s){var n={fields:t};makeRequest("PUT",`${this.apiUrl}/customers/${e}/?accountId=${this.accountId}`,this.token,s,n)},changeCustomer:function(e,t,s){makeRequest("PUT",`${this.apiUrl}/interactions/${e}/change_customer/${t}?accountId=${this.accountId}`,this.token,s)},mergeCustomers:function(e,t,s,n){var i={oldCustomer:t,fields:s};makeRequest("PUT",`${this.apiUrl}/customers/${e}/merge?accountId=${this.accountId}`,this.token,n,i)},getFormFields:function(e){makeRequest("GET",`${this.apiUrl}/form_fields`,this.token,e)},uploadFile:function(e,t){var s=new XMLHttpRequest;s.onload=function(e){t(JSON.parse(s.response))},s.open("POST",`${this.apiUrl}/uploads?accountId=${this.accountId}`,!0),s.setRequestHeader("Content-type","multipart/form-data"),s.setRequestHeader("Authorization",this.token),s.send(JSON.stringify(e))},getQueue:function(e=20,t=1,s){makeRequest("GET",`${this.msUrl}/interactions/queue?timestamp=${Date.now()}&limit=${e}&page=${t}`,this.token,s)},getInbox:function(e=20,t=1,s="",n){makeRequest("GET",`${this.msUrl}/interactions/inbox?timestamp=${Date.now()}&limit=${e}&page=${t}&search=${s}`,this.token,n)},getCount:function(e){makeRequest("GET",`${this.msUrl}/interactions/count?timestamp=${Date.now()}`,this.token,e)},getOnlineAgents:function(e){makeRequest("GET",`${this.msUrl}/dashboard/agents?timestamp=${Date.now()}`,this.token,e)}};